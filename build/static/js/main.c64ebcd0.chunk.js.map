{"version":3,"sources":["services/firebase.tsx","components/Button.tsx","assets/images/illustration.svg","assets/images/Logo.svg","assets/images/google-icon.svg","assets/images/copy.svg","assets/images/delete.svg","assets/images/check-icon.svg","context/AuthContext.tsx","assets/images/answer-icon.svg","hooks/useAuth.ts","pages/Home.tsx","pages/NewRoom.tsx","components/RoomCodeBtn.tsx","components/Question.tsx","hooks/useRoom.tsx","pages/Room.tsx","components/AnswerIcon.tsx","pages/AdminRoom.tsx","App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","Button","isOutlined","props","className","authContext","createContext","AuthConextProvider","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","singInWithGoogle","children","useAuth","useContext","Home","history","useHistory","codeRoom","setcodeRoom","push","e","preventDefault","trim","ref","get","roomRef","exists","alert","val","closedAt","src","ilustration","alt","logo","onClick","googleIcon","onSubmit","onChange","target","type","placeholder","NewRoom","newRoom","setNewRoom","title","authorId","firebaseRoom","key","to","RoomCodeBtn","navigator","clipboard","writeText","code","parentNode","classList","add","setTimeout","remove","copyBtn","Question","content","author","isAnswered","isHightlighted","cx","question","highlighted","answered","useRoom","roomId","questions","setQuestions","setTitle","on","room","databaseRoom","firebaseQuestions","parseQuestions","Object","entries","map","console","log","likes","likesCount","values","length","likeId","find","off","Room","params","useParams","newQuestion","setNewQuestion","questionId","disabled","handleLikeQuestions","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AnswerIcon","color","AdminRoom","window","confirm","update","Date","isHighlighted","handleCheckQuestionAsAnswered","checkIcon","handleHighlighetedQuestion","handleDeleteQuestion","deleteImg","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c64ebcd0.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\n\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBEMFw1ALnF4zz2pz__prDKOO9q_CWRFLY\",\r\n  authDomain: \"letmeask-1bc27.firebaseapp.com\",\r\n  databaseURL: \"https://letmeask-1bc27-default-rtdb.firebaseio.com\",\r\n  projectId: \"letmeask-1bc27\",\r\n  storageBucket: \"letmeask-1bc27.appspot.com\",\r\n  messagingSenderId: \"243901052622\",\r\n  appId: \"1:243901052622:web:c3f642061aae004395029f\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\n\r\nexport { firebase, auth, database };\r\n","import React from \"react\";\r\n// Dentro de Buttonhtml tem todas as declaraçeos possiveis de variavies para button\r\nimport { ButtonHTMLAttributes } from \"react\";\r\n\r\nimport \"../styles/button.scss\";\r\n\r\ntype BtnProps = ButtonHTMLAttributes<HTMLButtonElement> & {\r\n  isOutlined?: boolean;\r\n};\r\n\r\nexport function Button({ isOutlined = false, ...props }: BtnProps) {\r\n  return (\r\n    <button\r\n      {...props}\r\n      className={`btn ${isOutlined ? \"outlined\" : \"\"}`}\r\n    ></button>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/illustration.701e08a0.svg\";","export default __webpack_public_path__ + \"static/media/Logo.99e1a02b.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.4fa65408.svg\";","export default __webpack_public_path__ + \"static/media/copy.6b92206d.svg\";","export default __webpack_public_path__ + \"static/media/delete.aa4b67d9.svg\";","export default __webpack_public_path__ + \"static/media/check-icon.fac6d46d.svg\";","import { createContext, ReactNode, useState, useEffect } from \"react\";\r\nimport { firebase, auth } from \"../services/firebase\";\r\ntype User = {\r\n  id: string;\r\n  name: string;\r\n  avatar: string;\r\n};\r\n\r\ntype AuthContextType = {\r\n  user: User | undefined;\r\n  singInWithGoogle: () => Promise<void>;\r\n};\r\n\r\nexport const authContext = createContext({} as AuthContextType);\r\n\r\ntype AuthConextProviderProps = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport function AuthConextProvider(props: AuthConextProviderProps) {\r\n  const [user, setUser] = useState<User>();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const { displayName, photoURL, uid } = user;\r\n\r\n        if (!displayName || !photoURL) {\r\n          throw new Error(\"Missing information from Google Account. \");\r\n        }\r\n\r\n        setUser({\r\n          id: uid,\r\n          name: displayName,\r\n          avatar: photoURL,\r\n        });\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  async function singInWithGoogle() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    const result = await auth.signInWithPopup(provider);\r\n\r\n    if (result.user) {\r\n      const { displayName, photoURL, uid } = result.user;\r\n\r\n      if (!displayName || !photoURL) {\r\n        throw new Error(\"Missing information from Google Account. \");\r\n      }\r\n\r\n      setUser({\r\n        id: uid,\r\n        name: displayName,\r\n        avatar: photoURL,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <authContext.Provider value={{ user, singInWithGoogle }}>\r\n      {props.children}\r\n    </authContext.Provider>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/answer-icon.9caa0b8b.svg\";","import { useContext } from \"react\";\r\nimport { authContext } from \"../context/AuthContext\";\r\n\r\nexport function useAuth() {\r\n  const value = useContext(authContext);\r\n  return value;\r\n}\r\n","import { useHistory } from \"react-router-dom\";\r\n\r\nimport { Button } from \"../components/Button\";\r\n\r\nimport \"../styles/auth.scss\";\r\n\r\nimport { ilustration, logo, googleIcon } from \"../assets/images\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { FormEvent, useState } from \"react\";\r\nimport { database } from \"../services/firebase\";\r\n\r\nexport function Home() {\r\n  const history = useHistory();\r\n  const { user, singInWithGoogle } = useAuth();\r\n  const [codeRoom, setcodeRoom] = useState(\"\");\r\n\r\n  async function handleCreateRoom() {\r\n    if (!user) {\r\n      await singInWithGoogle();\r\n    }\r\n    history.push(\"/rooms/new\");\r\n  }\r\n\r\n  async function handleJoinRoom(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    if (codeRoom.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    const roomRef = await database.ref(`rooms/${codeRoom}`).get();\r\n    if (!roomRef.exists()) {\r\n      alert(\"Sala não existe.\");\r\n      setcodeRoom(\"\");\r\n      return;\r\n    }\r\n    if (roomRef.val().closedAt) {\r\n      alert(\"Sala já foi encerrada\");\r\n      setcodeRoom(\"\");\r\n      return;\r\n    }\r\n\r\n    history.push(`rooms/${codeRoom}`);\r\n  }\r\n\r\n  return (\r\n    <div id=\"auth-page\">\r\n      <aside>\r\n        <img src={ilustration} alt=\"Imagem da pagina de login\" />\r\n        <strong>Pergunte a seu streamer!</strong>\r\n        <p>Aprenda e compartilhe conhecimento com outras pessoas.</p>\r\n      </aside>\r\n      <main>\r\n        <div className=\"main-content\">\r\n          <img src={logo} alt=\"Logo da página de login\" />\r\n          <button onClick={handleCreateRoom} className=\"create-room\">\r\n            <img src={googleIcon} alt=\"Logo do Google.\" />\r\n            Crie sua sala com o Google\r\n          </button>\r\n          <div className=\"separator\">ou entre em uma sala</div>\r\n          <form onSubmit={handleJoinRoom}>\r\n            <input\r\n              onChange={(e) => setcodeRoom(e.target.value)}\r\n              value={codeRoom}\r\n              type=\"text\"\r\n              placeholder=\"Digite o código da sala\"\r\n            />\r\n            <Button type=\"submit\">Entrar na sala</Button>\r\n          </form>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import { ilustration, logo } from \"../assets/images\";\r\nimport { FormEvent, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport \"../styles/auth.scss\";\r\n\r\nimport { Button } from \"../components/Button\";\r\nimport { database } from \"../services/firebase\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\n\r\nexport function NewRoom() {\r\n  const { user } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const [newRoom, setNewRoom] = useState(\"\");\r\n\r\n  async function handleCreateRomm(e: FormEvent) {\r\n    e.preventDefault();\r\n    if (newRoom.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    const roomRef = database.ref(\"rooms\");\r\n\r\n    const firebaseRoom = await roomRef.push({\r\n      title: newRoom,\r\n      authorId: user?.id,\r\n    });\r\n\r\n    history.push(`/admin/rooms/${firebaseRoom.key}`);\r\n  }\r\n\r\n  return (\r\n    <div id=\"auth-page\">\r\n      <aside>\r\n        <img src={ilustration} alt=\"Imagem da pagina de login\" />\r\n        <strong>Pergunte a seu streamer!</strong>\r\n        <p>Aprenda e compartilhe conhecimento com outras pessoas.</p>\r\n      </aside>\r\n      <main>\r\n        <div className=\"main-content\">\r\n          <img src={logo} alt=\"Logo da página de login\" />\r\n          <h2>Crie uma nova sala</h2>\r\n          <form onSubmit={handleCreateRomm}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nome da sala\"\r\n              onChange={(e) => setNewRoom(e.target.value)}\r\n              value={newRoom}\r\n            />\r\n            <Button type=\"submit\">Criar sala</Button>\r\n          </form>\r\n          <p>\r\n            Quer entrar em uma sala já existente ?{\" \"}\r\n            <Link to=\"/\">Clique aqui</Link>\r\n          </p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import { copyBtn } from \"../assets/images\";\r\nimport \"../styles/room-code.scss\";\r\n\r\ntype RoomCodeProps = {\r\n  code: string;\r\n};\r\n\r\nexport function RoomCodeBtn(props: RoomCodeProps) {\r\n  function copyCodeRoom(e: any) {\r\n    navigator.clipboard.writeText(props.code);\r\n    e.target.parentNode.classList.add(\"active\");\r\n    setTimeout(\r\n      () => {\r\n        e.target.parentNode.classList.remove(\"active\");\r\n      },\r\n\r\n      1500\r\n    );\r\n  }\r\n  return (\r\n    <button className=\"room-code\">\r\n      <div onClick={copyCodeRoom}>\r\n        <img src={copyBtn} alt=\"Código da sala.\" />\r\n      </div>\r\n      <span>Sala {props.code}</span>\r\n    </button>\r\n  );\r\n}\r\n","import { ReactNode } from \"react\";\r\nimport \"../styles/question.scss\";\r\nimport cx from \"classnames\";\r\nimport { isCallExpression } from \"typescript\";\r\ntype QuestionsProps = {\r\n  content: string;\r\n  author: {\r\n    name: string;\r\n    avatar: string;\r\n  };\r\n  children?: ReactNode;\r\n  isAnswered?: boolean;\r\n  isHightlighted?: boolean;\r\n};\r\n\r\nexport function Question({\r\n  content,\r\n  author,\r\n  children,\r\n  isAnswered,\r\n  isHightlighted,\r\n}: QuestionsProps) {\r\n  return (\r\n    <div\r\n      className={cx({\r\n        question: true,\r\n        highlighted: isHightlighted,\r\n        answered: isAnswered && !isHightlighted,\r\n      })}\r\n    >\r\n      <p> {content}</p>\r\n      <footer>\r\n        <div className=\"user-info\">\r\n          <img src={author.avatar} alt=\"Foto do usuario.\" />\r\n          <span>{author.name}</span>\r\n        </div>\r\n        <div className=\"question-btns\">{children}</div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { database } from \"../services/firebase\";\r\nimport { useAuth } from \"./useAuth\";\r\n\r\ntype Questions = {\r\n  id: string;\r\n  author: {\r\n    avatar: string;\r\n    name: string;\r\n  };\r\n  content: string;\r\n  isAnswered: boolean;\r\n  isHightlighted: boolean;\r\n  likesCount: number;\r\n  likeId: string | undefined;\r\n};\r\n\r\ntype firebaseDataQuestions = Record<\r\n  string,\r\n  {\r\n    author: {\r\n      avatar: string;\r\n      name: string;\r\n    };\r\n    content: string;\r\n    isAnswered: boolean;\r\n    isHightlighted: boolean;\r\n    likes: Record<\r\n      string,\r\n      {\r\n        authorId: string;\r\n      }\r\n    >;\r\n  }\r\n>;\r\n\r\nexport function useRoom(roomId: string) {\r\n  const { user } = useAuth();\r\n  const [questions, setQuestions] = useState<Questions[]>([]);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const roomRef = database.ref(`rooms/${roomId}`);\r\n\r\n    roomRef.on(\"value\", (room) => {\r\n      const databaseRoom = room.val();\r\n      const firebaseQuestions: firebaseDataQuestions =\r\n        databaseRoom.questions ?? {};\r\n      const parseQuestions = Object.entries(firebaseQuestions).map(\r\n        ([key, value]) => {\r\n          console.log(Object.entries(value.likes ?? {}));\r\n          return {\r\n            id: key,\r\n            content: value.content,\r\n            author: value.author,\r\n            isAnswered: value.isAnswered,\r\n            isHightlighted: value.isHightlighted,\r\n            likesCount: Object.values(value.likes ?? {}).length,\r\n            likeId: Object.entries(value.likes ?? {}).find(([key, like]) => {\r\n              return like.authorId === user?.id;\r\n            })?.[0],\r\n          };\r\n        }\r\n      );\r\n\r\n      setQuestions(parseQuestions);\r\n      setTitle(databaseRoom.title);\r\n\r\n      return () => {\r\n        roomRef.off(\"value\");\r\n      };\r\n    });\r\n  }, [roomId, user?.id]);\r\n\r\n  return { title, questions };\r\n}\r\n","import { logo } from \"../assets/images/\";\r\nimport { Button } from \"../components/Button\";\r\nimport \"../styles/room.scss\";\r\n\r\nimport { RoomCodeBtn } from \"../components/RoomCodeBtn\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { FormEvent, useState } from \"react\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { database } from \"../services/firebase\";\r\nimport { Question } from \"../components/Question\";\r\nimport { useRoom } from \"../hooks/useRoom\";\r\n\r\ntype RoomParams = {\r\n  id: string;\r\n};\r\n\r\nexport function Room() {\r\n  const { user } = useAuth();\r\n  const params = useParams<RoomParams>();\r\n  const [newQuestion, setNewQuestion] = useState(\"\");\r\n  const { title, questions } = useRoom(params.id);\r\n\r\n  async function handleSendQuestion(e: FormEvent) {\r\n    e.preventDefault();\r\n    if (newQuestion.trim() === \"\") {\r\n      return;\r\n    }\r\n    if (!user) {\r\n      alert(\"Usuário não autentificado, faça o login.\");\r\n      throw new Error(\"Must be logged in\");\r\n    }\r\n    const question = {\r\n      content: newQuestion,\r\n      author: {\r\n        name: user.name,\r\n        avatar: user.avatar,\r\n      },\r\n      isHightlighted: false,\r\n      isAnswered: false,\r\n    };\r\n\r\n    await database.ref(`rooms/${params.id}/questions`).push(question);\r\n\r\n    setNewQuestion(\"\");\r\n  }\r\n\r\n  async function handleLikeQuestions(\r\n    questionId: string,\r\n    likeId: string | undefined\r\n  ) {\r\n    if (likeId) {\r\n      await database\r\n        .ref(`rooms/${params.id}/questions/${questionId}/likes/${likeId}`)\r\n        .remove();\r\n    } else {\r\n      await database\r\n        .ref(`rooms/${params.id}/questions/${questionId}/likes`)\r\n        .push({\r\n          authorId: user?.id,\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-room\">\r\n      <header>\r\n        <div className=\"content\">\r\n          <img src={logo} alt=\"Logo do site.\" />\r\n          <RoomCodeBtn code={params.id} />\r\n        </div>\r\n      </header>\r\n      <main>\r\n        <div className=\"room-title\">\r\n          <h1>Sala: {title}</h1>\r\n          {questions.length > 0 && <span>{questions.length} pergunta (s)</span>}\r\n        </div>\r\n\r\n        <form onSubmit={handleSendQuestion}>\r\n          <textarea\r\n            onChange={(e) => setNewQuestion(e.target.value)}\r\n            placeholder=\"O que voce quer perguntar? \"\r\n            value={newQuestion}\r\n          ></textarea>\r\n          <div className=\"form-footer\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <img src={user.avatar} alt=\"Foto do usuário.\" />\r\n                <h3>{user.name}</h3>\r\n              </div>\r\n            ) : (\r\n              <span>\r\n                Para enviar uma pergunta, <button>faça seu login</button>\r\n              </span>\r\n            )}\r\n            <Button type=\"submit\" disabled={!user}>\r\n              Enviar pergunta\r\n            </Button>\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"question-section\">\r\n          {questions.map((question) => {\r\n            return (\r\n              <Question\r\n                content={question.content}\r\n                author={question.author}\r\n                key={question.id}\r\n                isAnswered={question.isAnswered}\r\n                isHightlighted={question.isHightlighted}\r\n              >\r\n                {!question.isAnswered && (\r\n                  <button\r\n                    type=\"button\"\r\n                    aria-label=\"Marcar como gostei.\"\r\n                    className={`like-icon ${question.likeId ? \"liked\" : \"\"}`}\r\n                    onClick={() =>\r\n                      handleLikeQuestions(question.id, question.likeId)\r\n                    }\r\n                  >\r\n                    {question.likesCount > 0 && (\r\n                      <span>{question.likesCount}</span>\r\n                    )}\r\n                    <svg\r\n                      width=\"22\"\r\n                      height=\"22\"\r\n                      viewBox=\"0 0 22 22\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M6 21H3C2.46957 21 1.96086 20.7893 1.58579 20.4142C1.21071 20.0391 1 19.5304 1 19V12C1 11.4696 1.21071 10.9609 1.58579 10.5858C1.96086 10.2107 2.46957 10 3 10H6M13 8V4C13 3.20435 12.6839 2.44129 12.1213 1.87868C11.5587 1.31607 10.7956 1 10 1L6 10V21H17.28C17.7623 21.0055 18.2304 20.8364 18.5979 20.524C18.9654 20.2116 19.2077 19.7769 19.28 19.3L20.66 10.3C20.7035 10.0134 20.6842 9.72068 20.6033 9.44225C20.5225 9.16382 20.3821 8.90629 20.1919 8.68751C20.0016 8.46873 19.7661 8.29393 19.5016 8.17522C19.2371 8.0565 18.9499 7.99672 18.66 8H13Z\"\r\n                        stroke=\"#737380\"\r\n                        strokeWidth=\"1.5\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      />\r\n                    </svg>\r\n                  </button>\r\n                )}\r\n              </Question>\r\n            );\r\n          })}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","type AnswerProps = {\r\n  color?: string;\r\n};\r\n\r\nexport function AnswerIcon({ color }: AnswerProps) {\r\n  return (\r\n    <svg\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        fill-rule=\"evenodd\"\r\n        clip-rule=\"evenodd\"\r\n        d=\"M11.999 17.9995H17.999C19.656 17.9995 20.999 16.6565 20.999 14.9995V6.99951C20.999 5.34251 19.656 3.99951 17.999 3.99951H5.99902C4.34202 3.99951 2.99902 5.34251 2.99902 6.99951V14.9995C2.99902 16.6565 4.34202 17.9995 5.99902 17.9995H7.49902V20.9995L11.999 17.9995Z\"\r\n        stroke={color}\r\n        strokeWidth=\"1.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import { logo, deleteImg, checkIcon, answerIcon } from \"../assets/images/\";\r\nimport \"../styles/room.scss\";\r\n\r\nimport { RoomCodeBtn } from \"../components/RoomCodeBtn\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { Question } from \"../components/Question\";\r\nimport { useRoom } from \"../hooks/useRoom\";\r\nimport { Button } from \"../components/Button\";\r\nimport { database } from \"../services/firebase\";\r\nimport { AnswerIcon } from \"../components/AnswerIcon\";\r\n\r\ntype RoomParams = {\r\n  id: string;\r\n};\r\n\r\nexport function AdminRoom() {\r\n  const { user } = useAuth();\r\n  const history = useHistory();\r\n  const params = useParams<RoomParams>();\r\n  const { title, questions } = useRoom(params.id);\r\n\r\n  async function handleCloseRoom() {\r\n    if (window.confirm(\"Tem certeza ?\")) {\r\n      await database.ref(`rooms/${params.id}`).update({\r\n        closedAt: new Date(),\r\n      });\r\n      history.push(\"/\");\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  async function handleDeleteQuestion(questionId: string) {\r\n    if (window.confirm(\"Tem certeza que deseja deletar ?\")) {\r\n      await database.ref(`rooms/${params.id}/questions/${questionId}`).remove();\r\n    }\r\n  }\r\n\r\n  async function handleCheckQuestionAsAnswered(\r\n    questionId: string,\r\n    isAnswered: boolean\r\n  ) {\r\n    if (isAnswered) {\r\n      await database.ref(`/rooms/${params.id}/questions/${questionId}`).update({\r\n        isAnswered: false,\r\n      });\r\n    } else {\r\n      await database.ref(`/rooms/${params.id}/questions/${questionId}`).update({\r\n        isAnswered: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function handleHighlighetedQuestion(\r\n    questionId: string,\r\n    isHighlighted: boolean\r\n  ) {\r\n    if (isHighlighted) {\r\n      await database.ref(`/rooms/${params.id}/questions/${questionId}`).update({\r\n        isHightlighted: false,\r\n      });\r\n    } else {\r\n      await database.ref(`/rooms/${params.id}/questions/${questionId}`).update({\r\n        isHightlighted: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-room\">\r\n      <header>\r\n        <div className=\"content\">\r\n          <img src={logo} alt=\"Logo do site.\" />\r\n          <div>\r\n            <RoomCodeBtn code={params.id} />\r\n            <Button onClick={handleCloseRoom} isOutlined>\r\n              Encerrar\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main>\r\n        <div className=\"room-title\">\r\n          <h1>Sala: {title}</h1>\r\n          {questions.length > 0 && <span>{questions.length} pergunta (s)</span>}\r\n        </div>\r\n\r\n        <div className=\"question-section\">\r\n          {questions.map((question) => {\r\n            return (\r\n              <Question\r\n                key={question.id}\r\n                content={question.content}\r\n                author={question.author}\r\n                isAnswered={question.isAnswered}\r\n                isHightlighted={question.isHightlighted}\r\n              >\r\n                <>\r\n                  {!question.isAnswered && (\r\n                    <>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() =>\r\n                          handleCheckQuestionAsAnswered(\r\n                            question.id,\r\n                            question.isAnswered\r\n                          )\r\n                        }\r\n                      >\r\n                        <img src={checkIcon} alt=\"Responder pergunta.\" />\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() =>\r\n                          handleHighlighetedQuestion(\r\n                            question.id,\r\n                            question.isHightlighted\r\n                          )\r\n                        }\r\n                      >\r\n                        <AnswerIcon\r\n                          color={`${\r\n                            question.isHightlighted ? \"#835afd\" : \"#737380\"\r\n                          }`}\r\n                        />\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleDeleteQuestion(question.id)}\r\n                  >\r\n                    <img src={deleteImg} alt=\"Botao de deletar.\" />\r\n                  </button>\r\n                </>\r\n              </Question>\r\n            );\r\n          })}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Home } from \"./pages/Home\";\nimport { NewRoom } from \"./pages/NewRoom\";\nimport { Room } from \"./pages/Room\";\nimport { AdminRoom } from \"./pages/AdminRoom\";\n\nimport { AuthConextProvider } from \"./context/AuthContext\";\n\nfunction App() {\n  return (\n    <Router>\n      <AuthConextProvider>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/rooms/new\" component={NewRoom} />\n          <Route path=\"/rooms/:id\" component={Room} />\n          <Route path=\"/admin/rooms/:id\" component={AdminRoom} />\n        </Switch>\n      </AuthConextProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/global.scss\";\n\nimport \"./services/firebase\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}